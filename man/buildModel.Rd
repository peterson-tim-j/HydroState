% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wrapper.R
\name{buildModel}
\alias{buildModel}
\title{Builds hydroState model}
\usage{
buildModel(
  input.data = data.frame(year = c(), flow = c(), precip = c()),
  data.transform = NULL,
  stateModel = NULL,
  Markov = NULL
)
}
\arguments{
\item{input.data}{dataframe of annual, seasonal, or monthly runoff and precipitation observations. Gaps with missing data in either streamflow or precipitation are permitted, and the handling of them is further discussed in \code{select.Markov}. Monthly data is required when using \code{seasonal.parameters} that assumes selected model parameters are better defined with a sinusoidal function.}

\item{data.transform}{a \code{Qhat.object} with transformed observations from \code{select.transform}. If blank, the default uses 'boxcox' to transform observations.}

\item{stateModel}{a \code{QhatModel.object} from \code{select.stateModel}. If blank, the default selects a 2-state 'QhatModel.homo.normal.linear' model with a truncated normal error distribution, and allows the intercept 'a0' and standard deviation 'std' to shift as state dependent parameters.}

\item{Markov}{a \code{markov.model.object} from \code{select.Markov}. If blank, the default selects a homogeneous Markov model without flickering.}
}
\value{
A built hydroState model object ready to be fitted with \code{fitModel}
}
\description{
\code{buildModel} builds a hydrostate model with either a default \code{stateModel} or the \code{stateModel} can be specified with options from \code{select.stateModel}. After the model is built, the hydroState model is ready to be fitted with \code{fitModel}
}
\details{
\code{buildModel}


hydroState operates in S4, object oriented programming, and requires three objects to build a hydroState model. Each object can be selected from \code{select.transform}, \code{select.stateModel}, and \code{select.Markov}; however, if no object is defined a default model is built with the following objects:
\itemize{
\item{1)} 'boxcox' \code{data.transform}
\item{2)} \code{select.stateModel} with 2-states, a truncated normal error distribution, and allows the intercept 'a0' and standard deviation 'std' to shift as state dependent parameters
\item{3)}  homogeneous Markov model without flickering in \code{select.Markov}.
}
To further review the default model and possible expansions, \code{select.stateModel} provides more details.
}
\examples{
# Load data
data(streamflow_annual_221201)

## Build default annual hydroState model
model = buildModel(input.data = streamflow_annual_221201)

# OR

## Build annual hydroState model with specified objects

  # Select data transformation. Transforms precipitation and flow in natural log-space
  data.transform = select.transform(func = 'log',input.data = streamflow_annual_221201)

  # Select stateModel. Assume 2-state, normal error distribution, 1-lag of auto-correlation,
  # and state dependent parameters in the slope 'a1' and standard deviation 'std'
  stateModel.annual.AR1 = select.stateModel(input.data = streamflow_annual_221201,
                             parameters = list('a0','a1','std','AR1'),
                             state.shift.parameters = list('a1','std'),
                             error.distribution = 'normal',
                             transition.graph = matrix(TRUE,2,2))

  # Select Markov model
  markovModel = select.Markov('annualHomogeneous', transition.graph=matrix(TRUE,2,2))

  # Build hydroState model with objects
  model = buildModel(input.data = streamflow_annual_221201,
                   data.transform = data.transform,
                   stateModel = stateModel.annual.AR1,
                   Markov = markovModel)

}
\keyword{build}
\keyword{hydroState}
